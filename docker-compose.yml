version: "3.6"
services:
    # ----------------------------------------
    # Portainer
    # Manage running docker containers
    # ----------------------------------------
    portainer:
        image: portainer/portainer
        container_name: portainer
        restart: always
        command: -H unix:///var/run/docker.sock
        ports:
            - "9000:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${USERDIR}/docker/portainer/data:/data
            - ${USERDIR}/docker/shared:/shared
        environment:
            - TZ=${TZ}
 
    # ----------------------------------------
    # Organizr
    # Dashboard for server applications
    # ----------------------------------------
    organizr:
        container_name: organizr
        restart: always
        image: lsiocommunity/organizr
        volumes:
            - ${USERDIR}/docker/organizr:/config
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "8080:80"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}

    # ----------------------------------------
    # Watchtower
    # Check and keep docker images up to date
    # ----------------------------------------
    watchtower:
        container_name: watchtower
        restart: always
        image: v2tec/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --schedule "0 0 4 * * *" --cleanup

    # ----------------------------------------
    # Plex
    # Media Server
    # ----------------------------------------
    plexms:
        container_name: plex
        restart: always
        image: plexinc/pms-docker:${PMSTAG}
        hostname: ${HOSTNAME}
        volumes:
            - ${USERDIR}/docker/plexms:/config
            - ${USERDIR}/Downloads/plex_tmp:/transcode
            - /mnt/music:/media/music
            - /mnt/video:/media/video
            - /mnt/photo:/media/photo
            - ${USERDIR}/docker/shared:/shared
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            #- ALLOWED_NETWORKS=${CIDR_ADDRESS}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
            - TZ=${TZ}

    # ----------------------------------------
    # Tautulli
    # Plex analytics
    # ----------------------------------------
    tautulli:
        container_name: tautulli
        restart: always
        image: linuxserver/tautulli
        volumes:
            - ${USERDIR}/docker/tautulli/config:/config
            - ${USERDIR}/docker/tautulli/logs:/logs:ro
            - ${USERDIR}/docker/shared:/shared
        ports:
            - "${IP_ADDRESS}:8181:8181"
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}  
        depends_on:
            - plexms

    # ----------------------------------------
    # OMBI
    # Request Service for Plex Content
    # ----------------------------------------
    ombi:
        image: linuxserver/ombi
        container_name: ombi
        restart: always
        ports:
            - '${IP_ADDRESS}:3579:3579'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=request.${DOMAIN}
            - LETSENCRYPT_HOST=request.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - ${USERDIR}/docker/ombi:/config
            - ${USERDIR}/docker/shared:/shared

    # ----------------------------------------
    # NETDATA
    # System Resource Monitoring Service
    # ----------------------------------------
    netdata:
        image: titpetric/netdata
        container_name: netdata
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:19999:19999'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=netdata.${DOMAIN}
            - LETSENCRYPT_HOST=netdata.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/etc/localtime:/etc/localtime:ro'
            - '/var/run/docker.sock:/var/run/docker.sock'

    # ----------------------------------------
    # Resilio Sync
    # Sync folders
    # ----------------------------------------
    #   sync:
    #   image: resilio/sync
    #   container_name: sync
    #   restart: always
    #   ports:
    #       - '${IP_ADDRESS}:8888:8888'
    #       - '${IP_ADDRESS}:55555:55555'
    #    volumes:
    #       - ${USERDIR}/docker/sync:/mnt/sync
    #       - ${USERDIR}:/mnt/mounted_folders/home

    # ----------------------------------------
    # Syncthing
    # Sync folder
    # ----------------------------------------
    #    syncthing:
    #   image: linuxserver/syncthing:latest
    #   restart: always
    #   ports:
    #       - "${IP_ADDRESS}:8384:8384"
    #       - "${IP_ADDRESS}:22000:22000"
    #       - "${IP_ADDRESS}:21027:21027/udp"
    #   volumes:
    #       - ${USERDIR}/docker/syncthing:/var/syncthing/config
    #       - ${USERDIR}:/var/syncthing

    # ----------------------------------------
    # PiHole
    # Network level DNS ad-blocking
    # ----------------------------------------
    pihole:
        image: pihole/pihole:latest
        dns:
            - 127.0.0.1
            - 1.1.1.1
        ports:
            - "${IP_ADDRESS}:53:53/tcp"
            - "${IP_ADDRESS}:53:53/udp"
            - "${IP_ADDRESS}:67:67/udp"
            - "${IP_ADDRESS}:80:80/tcp"
            - "${IP_ADDRESS}:443:443/tcp"
        environment:
            # enter your docker host IP here
            - ServerIP=${IP_ADDRESS}
            # IPv6 Address if your network supports it
            #VIRTUAL_HOST: pihole.yourdomain.local
            #VIRTUAL_PORT: 80
            # Add your own custom hostnames you need for your domain
            #extra_hosts:
            #   Point any of the jwilder virtual_host addresses
            # to your docker host ip address
            #- 'pihole.yourdomain.local:192.168.1.55'
        volumes:
            - ${USERDIR}/docker/pihole:/etc/pihole
            - ${USERDIR}/docker/pihole/pihole.log:/var/log/pihole.log
        restart: always

# ----------------------------------------
    # SONARR
    # TV Series Management
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:8989:8989'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=sonarr.${DOMAIN}
            - LETSENCRYPT_HOST=sonarr.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - '${USERDIR}/docker/sonarr:/config'
            - '/mnt/video/Torrents:/data/Completed'
            - '/mnt/video/TV:/tv'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # RADARR
    # Movie Management
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:7878:7878'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - VIRTUAL_HOST=radarr.${DOMAIN}
            - LETSENCRYPT_HOST=radarr.${DOMAIN}
            - LETSENCRYPT_EMAIL=${EMAIL}
        volumes:
            - '${USERDIR}/docker/radarr:/config'
            - '/mnt/video/Torrents:/data/Completed'
            - '/mnt/video/Movies:/movies'
            - '/etc/localtime:/etc/localtime:ro'

